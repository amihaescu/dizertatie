\BOOKMARK [0][]{chapter*.2}{Lista figurilor}{}% 1
\BOOKMARK [0][]{chapter*.3}{Lista tabelelor}{}% 2
\BOOKMARK [0][]{chapter*.4}{Lista acronimelor}{}% 3
\BOOKMARK [0][]{chapter.1}{1 Introducere}{}% 4
\BOOKMARK [1][]{section.1.1}{1.1 Ce este o arhitectura software?}{chapter.1}% 5
\BOOKMARK [1][]{section.1.2}{1.2 De ce este arhitectura importanta ?}{chapter.1}% 6
\BOOKMARK [1][]{section.1.3}{1.3 Obiectivele arhitecturii software}{chapter.1}% 7
\BOOKMARK [1][]{section.1.4}{1.4 Principii arhitecturale cheie}{chapter.1}% 8
\BOOKMARK [0][]{chapter.2}{2 Principii fundamentale ale arhitecturii software}{}% 9
\BOOKMARK [1][]{section.2.1}{2.1 Principii de proiectare}{chapter.2}% 10
\BOOKMARK [2][]{subsection.2.1.1}{2.1.1 Standarde de proiectare}{section.2.1}% 11
\BOOKMARK [2][]{subsection.2.1.2}{2.1.2 Nivelele aplicatiei}{section.2.1}% 12
\BOOKMARK [2][]{subsection.2.1.3}{2.1.3 Componente, module si functii}{section.2.1}% 13
\BOOKMARK [0][]{chapter.3}{3 Tipare si stiluri arhitecturale}{}% 14
\BOOKMARK [1][]{section.3.1}{3.1 Ce este un stil arhitectural?}{chapter.3}% 15
\BOOKMARK [2][]{subsection.3.1.1}{3.1.1 Sumar al stilurilor arhitecturale}{section.3.1}% 16
\BOOKMARK [2][]{subsection.3.1.2}{3.1.2 Combinarea stilurilor arhitecturale}{section.3.1}% 17
\BOOKMARK [1][]{section.3.2}{3.2 Arhitectura client/server}{chapter.3}% 18
\BOOKMARK [1][]{section.3.3}{3.3 Arhitectura bazata pe componente}{chapter.3}% 19
\BOOKMARK [1][]{section.3.4}{3.4 Arhitectura stratificata}{chapter.3}% 20
\BOOKMARK [1][]{section.3.5}{3.5 Arhitectura bazata pe bus de mesaje}{chapter.3}% 21
\BOOKMARK [1][]{section.3.6}{3.6 Arhitectura orientata pe obiecte}{chapter.3}% 22
\BOOKMARK [1][]{section.3.7}{3.7 Arhitectura orientata pe servicii}{chapter.3}% 23
\BOOKMARK [0][]{chapter.4}{4 Microservicii}{}% 24
\BOOKMARK [1][]{section.4.1}{4.1 Caracteristici ale arhitecturii microservicii}{chapter.4}% 25
\BOOKMARK [2][]{subsection.4.1.1}{4.1.1 Separarea prin intermediul serviciilor}{section.4.1}% 26
\BOOKMARK [2][]{subsection.4.1.2}{4.1.2 Organizare \356n jurul nevoilor de business}{section.4.1}% 27
\BOOKMARK [2][]{subsection.4.1.3}{4.1.3 Produse, nu proiecte}{section.4.1}% 28
\BOOKMARK [2][]{subsection.4.1.4}{4.1.4 Puncte termnale inteligente si bus-uri simple}{section.4.1}% 29
\BOOKMARK [2][]{subsection.4.1.5}{4.1.5 Guvernare distribuit}{section.4.1}% 30
\BOOKMARK [2][]{subsection.4.1.6}{4.1.6 Managementul distribuit al datelor}{section.4.1}% 31
\BOOKMARK [2][]{subsection.4.1.7}{4.1.7 Automatizarea infrastructurii}{section.4.1}% 32
\BOOKMARK [2][]{subsection.4.1.8}{4.1.8 Proiectare pentru dezastru}{section.4.1}% 33
\BOOKMARK [2][]{subsection.4.1.9}{4.1.9 Design evolutiv}{section.4.1}% 34
\BOOKMARK [1][]{section.4.2}{4.2 Avatanje si dezavantaje ale microserviciilor}{chapter.4}% 35
\BOOKMARK [2][]{subsection.4.2.1}{4.2.1 Avantaje}{section.4.2}% 36
\BOOKMARK [2][]{subsection.4.2.2}{4.2.2 Dezavantaje}{section.4.2}% 37
\BOOKMARK [1][]{section.4.3}{4.3 Construirea microserviciilor: folosirea unui API gateway}{chapter.4}% 38
\BOOKMARK [2][]{subsection.4.3.1}{4.3.1 Introducere}{section.4.3}% 39
\BOOKMARK [2][]{subsection.4.3.2}{4.3.2 Comunicare directa \356ntre client si microservicii}{section.4.3}% 40
\BOOKMARK [2][]{subsection.4.3.3}{4.3.3 Folosirea unui API Gateway}{section.4.3}% 41
